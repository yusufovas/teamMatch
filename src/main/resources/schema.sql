CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE IF NOT EXISTS USERS (
    ID UUID NOT NULL DEFAULT uuid_generate_v4(),
    NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE NOT NULL,
    PASSWORD VARCHAR(100) NOT NULL,
    TIMEZONE_ID UUID,
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS SKILLS (
    ID UUID NOT NULL DEFAULT uuid_generate_v4(),
    TITLE VARCHAR(100),
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS USER_SKILLS (
    USER_ID UUID NOT NULL,
    SKILL_ID UUID NOT NULL,
    PRIMARY KEY(USER_ID, SKILL_ID),
    FOREIGN KEY(USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY(SKILL_ID) REFERENCES SKILLS(ID)
);

CREATE TABLE IF NOT EXISTS ROLES (
    ID UUID NOT NULL DEFAULT uuid_generate_v4(),
    NAME VARCHAR(100),
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS USER_ROLES (
    USER_ID UUID NOT NULL,
    ROLE_ID UUID NOT NULL,
    PRIMARY KEY(USER_ID, ROLE_ID),
    FOREIGN KEY(USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY(ROLE_ID) REFERENCES ROLES(ID)
);

CREATE TABLE IF NOT EXISTS TEAMS (
    ID UUID NOT NULL DEFAULT uuid_generate_v4(),
    NAME VARCHAR(100),
    DESCRIPTION VARCHAR(300),
    STATUS VARCHAR(50),
    OWNER_ID UUID,
    PRIMARY KEY(ID),
    FOREIGN KEY(OWNER_ID) REFERENCES USERS(ID)
);

CREATE TABLE IF NOT EXISTS TEAM_REQUIREMENTS (
    ID UUID NOT NULL DEFAULT uuid_generate_v4(),
    MIN_COUNT INTEGER NOT NULL,
    MAX_COUNT INTEGER NOT NULL,
    TEAM_ID UUID,
    ROLE_ID UUID,
    PRIMARY KEY(ID),
    FOREIGN KEY(TEAM_ID) REFERENCES TEAMS(ID),
    FOREIGN KEY(ROLE_ID) REFERENCES ROLES(ID)
);

CREATE TABLE IF NOT EXISTS TEAM_MEMBERS (
    TEAM_ID UUID NOT NULL,
    USER_ID UUID NOT NULL,
    ROLE_ID UUID NOT NULL,
    APPROVED BOOLEAN NOT NULL,
    JOINED_AT TIMESTAMP NOT NULL,
    PRIMARY KEY(TEAM_ID, USER_ID),
    FOREIGN KEY(TEAM_ID) REFERENCES TEAMS(ID),
    FOREIGN KEY(USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY(ROLE_ID) REFERENCES ROLES(ID)
);

CREATE TABLE team_join_requests (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    team_id UUID NOT NULL,
    user_id UUID NOT NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'PENDING',
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    CONSTRAINT fk_team FOREIGN KEY (team_id) REFERENCES teams(id) ON DELETE CASCADE,
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
